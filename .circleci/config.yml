# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.5.0
  codecov: codecov/codecov@3.3.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build-and-test: 
    # These next lines defines a Docker executors: https://circleci.com/docs/executor-types/
    # A list of available CircleCI Docker convenience images are available here: https://circleci.com/developer/images/image/cimg/python
    docker:
      - image: cimg/python:3.11.0  # Updated Python version to 3.11
    # Checkout the code as the first step. This is a dedicated CircleCI step.
    # The python orb's install-packages step will install the dependencies from a Pipfile via Pipenv by default.

    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          pip-dependency-file: Python/requirements.txt
      - run:
          name: Install pytest  
          command: pip install pytest
      - run:
          name: Run tests
          command: pytest --cov=./ --cov-report=xml ./Python/Tests
      - codecov/upload:
          name: Upload to CodeCov
          token: ${CODECOV_TOKEN}

# Invoke jobs via workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  sample: 
    jobs:
      - build-and-test
